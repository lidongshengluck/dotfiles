关于memcached的相关资料和自己理解


                                    参考手册



==============================================================================
内容

    1.内存分配原理..................................|memcachedAllocator|
        1.1.slab内存分配概述........................|memcachedIntro|
        1.2.slab内存分配算法........................|memcachedSlabAllocator|
        1.3.page概念理解............................|memcacheddetailedpage|
        1.4.chunks概念理解..........................|memcachedDetailedChunks|
    2.查看运行状态..................................|memcachedRunStats|
        2.1.查看memcached运行健康度.................|memcachedStats|
        2.2.查看memcached slab 状态.................|memcachedStatsSlab|
        2.3.查看memcached item 状态.................|memcachedStatsItem|
    3.启动参数......................................|memcachedStart|
    4.关于php的相关扩展介绍.........................|memcachedPhpExtended|


==============================================================================
1. 内存分配原理                                           *memcachedAllocator*

------------------------------------------------------------------------------
1.1. slab内存分配概述                                         *memcachedIntro*

     memcached内存分配默认是采用了slab allocator的机制分配、管理内存。在该机制
出现之前，一般的内存算法采用简单的malloc和free来进行的。但是这样会导致很多内存
碎片，加重操作系统管理内存负担。最坏的清空下甚至管理内存，整理内存比memcache本
身还要慢，slab allocator算法就是为了解决这个问题而出现的。

------------------------------------------------------------------------------
1.2. slab内存分配算法                                 *memcachedslaballocator*

    slab Allocator是预先将内存分配长固定的块，并解决内存碎片的问题。一个slab中
可以包含多个块(chunk)。slab中的chunk，不会被释放，而是重复利用。

    slab Allocator内存分配算法，申请一个slab或增加slab中的内存，每次先增加一页
page(默认为1M)，然后在page中分配成固定大小的块(chunk)

    slab Allocator缓存数据原理，memcache根据收到数据大小，选择适合数据的大小的
slab，memcache选取slab中空闲(未使用或过期)的chunk，来保存数据

    由于slab是按照固定内存分配大小，所以无法有效的利用内存
    例如：把100byte的数据存到128byte的chunk中，会造成28byte的浪费

    memcached中每个slab是按照一定的增长因子(默认为1.25倍)来创建的，例如：
        * slab1 chunks_size 80
        * slab2 chunks_size 100

------------------------------------------------------------------------------
1.4. memcached page 概念理解                           *memcachedDetailedPage*

    在memcached中，slab中增加内存，是以页(page)为单位来申请的。memcached最大存
储item(key+value+flag)大小是由page来限制的，如果需要修改存储大小限制，需要修改
memcached.c源码，示例:
    settings.item_size_max = 1024 * 1024; /* The famous 1MB upper Limit

------------------------------------------------------------------------------
1.5. memcached chunks 概念理解                       *memcachedDetailedChunks*

    在memcahced中，实际存储数据是由大小不等的chunks来存储的，也就是说chunks是
存储item的基础单位，每个chunks是固定大小的。    
    memcached需要内存的时候，申请1page，然后在page中按照chunks_size来分成若干
个大小固定的chunks。


==============================================================================
2. 查看运行状态                                            *memcachedRunStats*

------------------------------------------------------------------------------
2.1. 查看memcached运行健康度                                  *memcachedstats*

stats查看memcached运行状态，运行结果：
pid                     22459        进程ID
uptime                  1027046      服务器运行秒数
time                    1273043062   服务器当前unix时间戳
version                 1.4.4        服务器版本
libevent                1.4.4        libevent版本
pointer_size            64           操作系统默认指针长度(32/64位)
rusage_user             0.040000     进程累计用户时间
rusage_system           0.260000     进程累计系统时间
curr_connections        10           当前打开连接数
total_connections       82           曾打开的连接总数
connection_structures   13           服务器分配的连接结构数
reserved_fds            20           保留的fd数
cmd_get                 54           执行get命令总数
cmd_set                 34           执行set命令总数
cmd_flush               3            指向flush_all命令总数
cmd_touch               0
get_hits                9            get命中次数
get_misses              45           get未命中次数
delete_misses           5            delete未命中次数
delete_hits             1            delete命中次数
incr_misses             0            incr未命中次数
incr_hits               0            incr命中次数
decr_misses             0            decr未命中次数
decr_hits               0            decr命中次数
cas_misses              0            cas未命中次数
cas_hits                0            cas命中次数
cas_badval              0            使用擦拭次数
touch_hits              0
touch_misses            0
auth_cmds               0            认证操作次数(包含成功和失败次数)
auth_errors             0            认证操作失败次数
bytes_read              15785        读取字节总数
bytes_written           15222        写入字节总数
limit_maxbytes          1048576      分配的内存数（字节）
accepting_conns         1            目前接受的链接数
listen_disabled_num     0
threads                 4            线程数
conn_yields             0
hash_power_level        16
hash_butyes             525288
hsh_is_expanding        0
bytes                   0            存储item字节数
curr_items              0            item个数
total_items             34           item总数
evictions               0            为获取空间删除item的总数
reclaimed               0

------------------------------------------------------------------------------
2.2. 查看memcached slab状态                                *memcachedstatsslab*

stats slabs查看每个slab的使用情况
chunk_size              96           chunk size
chunks_per_page         10922        每页分配的chunks
total_pages             2            分配页数
total_chunks            21844        总chunks
used_chunks             10944
free_chunks             10900        空闲的chunks
free_chunks_end         0
mem_requested           875188       申请分配的内存
get_hits                0
cmd_set                 10944
delete_hits             0
incr_hits               0
decr_hits               0
cas_hits                0
cas_badval              0
touch_hits              0

slab统计信息
active_slabs           1
total_malloced         2097024

------------------------------------------------------------------------------
2.3. 查看memcached items使用情况                           *memcachedstatsitem*

stats items查看slab中的item使用情况
number              10944
age                 983     在lru中保留时间最长的
evicted             0       移出未过期item次数
evicted_nonzero     0       过期时间不为0，移出item次数
evicted_time        0       距离清除最近过期item秒数
outofmemory         0       slab分配空间失败次数
tailrepairs         0
reclaimed           0       过期item存储新数据次数
expired_unfetched   0
evicted_unfetched   0


==============================================================================
4.启动参数                                                    *memcachedStart*

几个重要的启动参数，其余的可以man memcached查看
-t 线程数，默认为4
-c 最大同时连接数，默认为1024
-m 最大申请内存数
-M 内存耗尽，不删除数据，所有set，add等操作返回false
-n 最小内存分配空间
-f chunks_size增长因子，默认为1.25


==============================================================================
5.关于php的相关扩展介绍                                 *memcachedPhpExtended*

在php中提供两个扩展操作memcached，分别是
    1. memcache扩展
    2. memcached扩展
建议使用memcached扩展，memcached扩展支持更多的memcache协议，比如cas、append等
memcached还支持binary，也就预示着有更高的性能
支持更多的hash算法，并且有setoption方法进行方便的设置等。

具体可以参考php memcached 手册


------------------------------------------------------------------------------
vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=4:ft=help:norl:
